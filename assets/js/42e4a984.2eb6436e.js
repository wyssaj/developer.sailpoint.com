"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[16497],{941516:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var i=n(785893),s=n(511151);const a={id:"entitlement-read",title:"Entitlement Read",pagination_label:"Entitlement Read",sidebar_label:"Entitlement Read",keywords:["connectivity","connectors","entitlement read"],description:"Fetch a single entitlement\u2019s attributes from the source.",slug:"/connectivity/saas-connectivity/commands/entitlement-read",tags:["Connectivity","Connector Command"]},d=void 0,c={id:"connectivity/saas-connectivity/connector-commands/entitlement-read",title:"Entitlement Read",description:"Fetch a single entitlement\u2019s attributes from the source.",source:"@site/docs/connectivity/saas-connectivity/connector-commands/entitlement-read.md",sourceDirName:"connectivity/saas-connectivity/connector-commands",slug:"/connectivity/saas-connectivity/commands/entitlement-read",permalink:"/docs/connectivity/saas-connectivity/commands/entitlement-read",draft:!1,unlisted:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/connectivity/saas-connectivity/connector-commands/entitlement-read.md",tags:[{inline:!0,label:"Connectivity",permalink:"/docs/tags/connectivity"},{inline:!0,label:"Connector Command",permalink:"/docs/tags/connector-command"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1726169183e3,frontMatter:{id:"entitlement-read",title:"Entitlement Read",pagination_label:"Entitlement Read",sidebar_label:"Entitlement Read",keywords:["connectivity","connectors","entitlement read"],description:"Fetch a single entitlement\u2019s attributes from the source.",slug:"/connectivity/saas-connectivity/commands/entitlement-read",tags:["Connectivity","Connector Command"]},sidebar:"openApiSidebar",previous:{title:"Entitlement List",permalink:"/docs/connectivity/saas-connectivity/commands/entitlement-list"},next:{title:"Source Data Discover",permalink:"/docs/connectivity/saas-connectivity/commands/source-data-discover"}},l={},o=[{value:"Example StdEntitlementReadInput",id:"example-stdentitlementreadinput",level:3},{value:"Example StdEntitlementReadOutput",id:"example-stdentitlementreadoutput",level:3},{value:"Response Schema",id:"response-schema",level:2}];function r(t){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsx)(e.p,{children:"At this time Entitlement Read is not triggered from ISC for any specific workflow and as such it is not necessary to implement this in order to have a fully functional connector."})}),"\n",(0,i.jsxs)(e.p,{children:["To use this command, you must specify this value in the ",(0,i.jsx)(e.code,{children:"commands"})," array: ",(0,i.jsx)(e.code,{children:"std:entitlement:list"})]}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{style:{textAlign:"left"},children:"Input/Output"}),(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"Data Type"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{style:{textAlign:"left"},children:"Input"}),(0,i.jsx)(e.td,{style:{textAlign:"center"},children:"StdEntitlementReadInput"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{style:{textAlign:"left"},children:"Output"}),(0,i.jsx)(e.td,{style:{textAlign:"center"},children:"StdEntitlementReadOutput"})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"example-stdentitlementreadinput",children:"Example StdEntitlementReadInput"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'{\n    "identity": "john.doe",\n    "key": {\n        "simple": {\n            "id": "john.doe"\n        }\n    },\n    "type": "group"\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"example-stdentitlementreadoutput",children:"Example StdEntitlementReadOutput"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:'{\n    "identity": "john.doe",\n    "key": {\n        "simple": {\n            "id": "administrator"\n        }\n    },\n    "type": "group",\n    "attributes": {\n        "id": "administrator",\n        "name": "Administrator"\n    }\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"response-schema",children:"Response Schema"}),"\n",(0,i.jsxs)(e.p,{children:["Entitlement read fetches a single entitlement\u2019s attributes and returns the resulting object to ISC, similar to how entitlement list does. You can implement this in the main connector file, ",(0,i.jsx)(e.a,{href:"https://github.com/sailpoint-oss/airtable-example-connector/blob/main/src/index.ts",children:"index.ts"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"...\n.stdEntitlementRead(async (context: Context, input: StdEntitlementReadInput, res: Response<StdEntitlementReadOutput>) => {\n    const group = await airtable.getEntitlement(input.key)\n\n    res.send(group.toStdEntitlementReadOutput())\n})\n...\n...\n...\npublic toStdEntitlementReadOutput(): StdEntitlementReadOutput {\n    return this.buildStandardObject();\n}\n\nprivate buildStandardObject(): StdEntitlementReadOutput | StdEntitlementListOutput {\n    return {\n        key: SimpleKey(this.id),\n        type: 'group',\n        attributes: {\n            id: this.id,\n            name: this.name\n        }\n    }\n}\n"})})]})}function m(t={}){const{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(r,{...t})}):r(t)}}}]);