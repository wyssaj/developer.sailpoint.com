"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[53253],{807557:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var n=s(785893),i=s(511151);const r={id:"typescript-sdk-getting-started",title:"Getting Started with The TypeScript SDK",pagination_label:"Getting Started",sidebar_label:"Getting Started",sidebar_position:1,sidebar_class_name:"typescriptsdk",keywords:["tsc","typescript","sdk","start"],description:"Learn how to use the TypeScript SDK in this guide.",slug:"/tools/sdk/typescript/getting-started",tags:["SDK"]},o=void 0,a={id:"tools/sdk/typescript/typescript-sdk-getting-started",title:"Getting Started with The TypeScript SDK",description:"Learn how to use the TypeScript SDK in this guide.",source:"@site/docs/tools/sdk/typescript/getting-started.md",sourceDirName:"tools/sdk/typescript",slug:"/tools/sdk/typescript/getting-started",permalink:"/docs/tools/sdk/typescript/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/tools/sdk/typescript/getting-started.md",tags:[{inline:!0,label:"SDK",permalink:"/docs/tags/sdk"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1726169183e3,sidebarPosition:1,frontMatter:{id:"typescript-sdk-getting-started",title:"Getting Started with The TypeScript SDK",pagination_label:"Getting Started",sidebar_label:"Getting Started",sidebar_position:1,sidebar_class_name:"typescriptsdk",keywords:["tsc","typescript","sdk","start"],description:"Learn how to use the TypeScript SDK in this guide.",slug:"/tools/sdk/typescript/getting-started",tags:["SDK"]},sidebar:"openApiSidebar",previous:{title:"TypeScript SDK",permalink:"/docs/tools/sdk/typescript"},next:{title:"Create a resource",permalink:"/docs/tools/sdk/typescript/create"}},l={},d=[{value:"List Transforms in your tenant",id:"list-transforms-in-your-tenant",level:3},{value:"Use query parameters to filter your tenant&#39;s transform list",id:"use-query-parameters-to-filter-your-tenants-transform-list",level:3}];function c(t){const e={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["Once your SDK is installed and configured, you can start accessing the SDK's different functionalities. To learn how to install and configure the Typescript SDK, refer to ",(0,n.jsx)(e.a,{href:"/docs/tools/sdk/typescript",children:"Installation and Configuration"}),"."]}),"\n",(0,n.jsx)(e.p,{children:"This guide will walk through some examples of this functionality."}),"\n",(0,n.jsxs)(e.p,{children:["To make sure that your SDK is connecting to the APIs you need, you can specify the API within the curly brackets in ",(0,n.jsx)(e.code,{children:"import {}"}),' at the top of the "index.ts" file. In this example, you could add ',(0,n.jsx)(e.code,{children:"Configuration"})," and ",(0,n.jsx)(e.code,{children:"TransformsApi"})," to add the functionality to list transforms."]}),"\n",(0,n.jsx)(e.h3,{id:"list-transforms-in-your-tenant",children:"List Transforms in your tenant"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-typescript",children:"import {Configuration, TransformsApi} from 'sailpoint-api-client';\n\nconst getTransforms = async () => {\n  // Initialize configuration, this requests a token using your configured credentials\n  // to be able to call out to APIs\n  let apiConfig = new Configuration();\n\n  // Initialize the TransformsApi, this creates an instance of the TransformsApi.\n  // The configuration object is passed in so that the API can add your token to the request\n  let api = new TransformsApi(apiConfig);\n\n  // Call out to your tenant to get the list of transforms.\n  let transforms = await api.listTransforms();\n  console.log(transforms);\n};\n\ngetTransforms();\n"})}),"\n",(0,n.jsxs)(e.p,{children:["To compile the file, first run the ",(0,n.jsx)(e.code,{children:"tsc src/index.ts"})," command. This command creates a corresponding ",(0,n.jsx)(e.code,{children:"index.js"})," file you can use to run the SDK."]}),"\n",(0,n.jsxs)(e.p,{children:["To run the SDK, run the ",(0,n.jsx)(e.code,{children:"node src/index.js"})," command. This command sends the request and outputs a list of transforms stored in your tenant."]}),"\n",(0,n.jsx)(e.h3,{id:"use-query-parameters-to-filter-your-tenants-transform-list",children:"Use query parameters to filter your tenant's transform list"}),"\n",(0,n.jsx)(e.p,{children:'Using the same SDK function, you can list your transforms but limit the results to only what you want. This example wants a list of no more than 10 transforms that start with the name "Test":'}),"\n",(0,n.jsxs)(e.p,{children:["Refer to ",(0,n.jsx)(e.a,{href:"https://developer.sailpoint.com/docs/api/v3/list-transforms",children:"List Transforms"})," for all its supported query parameters."]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-typescript",children:"import {Configuration, TransformsApi} from 'sailpoint-api-client';\n\nconst getTransforms = async () => {\n  let apiConfig = new Configuration();\n  let api = new TransformsApi(apiConfig);\n  let transforms = await api.listTransforms({\n    limit: 10,\n    filters: 'name sw \"Test\"',\n  });\n  console.log(transforms);\n};\n\ngetTransforms();\n"})}),"\n",(0,n.jsx)(e.p,{children:"Run this command to compile and run the code:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-bash",children:"tsc src/index.ts && node src/index.js\n"})})]})}function p(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(c,{...t})}):c(t)}}}]);