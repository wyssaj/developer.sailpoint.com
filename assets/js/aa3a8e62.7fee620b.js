"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[31733],{435346:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>r});var n=t(785893),o=t(511151);const d={id:"plugin-developer-guide",title:"Plugin Developer Guide",pagination_label:"Plugin Developer Guide",sidebar_label:"Plugin Developer Guide",sidebar_position:1,sidebar_class_name:"plugin_developer_guide",keywords:["plugin"],description:"IdentityIQ Plugin Developer Guide.",slug:"/iiq/plugin-developer-guide",tags:["plugin","guide","identityiq"]},l=void 0,s={id:"plugin-developer-guide",title:"Plugin Developer Guide",description:"IdentityIQ Plugin Developer Guide.",source:"@site/docs/plugin-developer-guide.md",sourceDirName:".",slug:"/iiq/plugin-developer-guide",permalink:"/docs/iiq/plugin-developer-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/plugin-developer-guide.md",tags:[{inline:!0,label:"plugin",permalink:"/docs/tags/plugin"},{inline:!0,label:"guide",permalink:"/docs/tags/guide"},{inline:!0,label:"identityiq",permalink:"/docs/tags/identityiq"}],version:"current",lastUpdatedBy:"GitHub Action Bot",lastUpdatedAt:1726169183e3,sidebarPosition:1,frontMatter:{id:"plugin-developer-guide",title:"Plugin Developer Guide",pagination_label:"Plugin Developer Guide",sidebar_label:"Plugin Developer Guide",sidebar_position:1,sidebar_class_name:"plugin_developer_guide",keywords:["plugin"],description:"IdentityIQ Plugin Developer Guide.",slug:"/iiq/plugin-developer-guide",tags:["plugin","guide","identityiq"]},sidebar:"iiqSideBar",previous:{title:"IdentityIQ",permalink:"/docs/iiq"},next:{title:"Overview",permalink:"/docs/iiq/plugin-developer-guide/overview"}},a={},r=[];function p(e){const i={a:"a",p:"p",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"Introduced with IdentityIQ 7.1, the plugin framework provides the infrastructure and tools to enable developers to extend the Open Identity Platform to meet a variety of specialized use cases that one might encounter in a non-standard deployment. The plugin framework allows developers to create packaged functionality that integrates with IdentityIQ, in a upgrade safe and isolated manner. It gives implementers a safe option for creating User Interface extensions, REST services, Custom SailPoint configuration objects, and more. This guide is designed to walk through the basics of plugin development and installation."}),"\n",(0,n.jsx)(i.p,{children:"The first iteration of the plugin framework was released as an add-on to IdentityIQ 7.0 - the development process for this legacy version is slightly different and is not the subject of this document. However, Appendix A will discuss the differences between versions, and the strategy for migrating a plugin developed for the 7.0 frameworks to the 7.1 framework."}),"\n",(0,n.jsxs)(i.p,{children:["Developing a plugin requires a fairly robust knowledge of IdentityIQ and its object model, Java, JavaScript, css, and SQL. This document is designed to provide development guidance at the high level - what the components of a plugin are, which components are required, how those objects interact. Language specific tutorials are beyond its scope. Throughout this document, examples will be taken and discussed from the 'TodoPlugin' - located here: ",(0,n.jsx)(i.a,{href:"https://community.sailpoint.com/t5/Plugin-Framework/TodoPlugin-V3-zip/ta-p/79764",children:"To-do Plugin"})]}),"\n",(0,n.jsx)(i.p,{children:"This guide is intended to be a community driven effort - please feel free to update and or add chapters based on your use of the Plugin Framework."})]})}function u(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);